package tdms_conf;

use strict;
use vars qw(@ISA @EXPORT_OK);
our @ISA=qw(Exporter);
our @EXPORT_OK = ();

# The number of records to fetch from the entry tables
our $init_size = 10;
push @EXPORT_OK, qw($init_size);

# The entry tables and their key column
our @company_entry = qw(acib_acitftg ftg_org_num);
our @person_entry = qw(acpr_prtpr pnr);
push @EXPORT_OK, qw(@company_entry @person_entry);

# Postgresql connection settings
# For local DB
our $local_db = "DB2REP";
our $local_host = $ENV{TDMSDB_PORT_5432_TCP_ADDR} ? $ENV{TDMSDB_PORT_5432_TCP_ADDR} : "172.17.0.2";
#our $local_host = "127.0.0.1";
our $local_dbport = $ENV{TDMSDB_PORT_5432_TCP_PORT} ? $ENV{TDMSDB_PORT_5432_TCP_PORT} : "5432";
our $local_dbuid = "db2moto";
our $local_dbpwd = "otom2bd";
# For remote DB
our $remote_db = "DB2REP";
our $remote_host = "10.46.117.29";
our $remote_dbport = "5432";
our $remote_dbuid = "nenant";
our $remote_dbpwd = "nenant";
push @EXPORT_OK, qw($local_db $local_host $local_dbport $local_dbuid $local_dbpwd);
push @EXPORT_OK, qw($remote_db $remote_host $remote_dbport $remote_dbuid $remote_dbpwd);

# FTP access info to mainframe
our $mainframe_ip = "164.9.148.225";
#our $mainframe_ip = "85.119.132.30";
our $mainframe_uid = "FTPTEDA";
our $mainframe_pwd = "Z9P1Y8H0";
push @EXPORT_OK, qw($mainframe_ip $mainframe_uid $mainframe_pwd);

# Directory where exported files are written
our $export_dir = "ftp";
push @EXPORT_OK, qw($export_dir);

# Prefix for file names on mainframe
our $export_prefix = "E719.TESTDATA";
push @EXPORT_OK, qw($export_prefix);

# Test object indicators
our @company_testobject_indicator = qw(acib_acitftg ftg_istatus_kod);
our @person_testobject_indicator = qw(acpr_prtpr status);
our $testobject_tag = "#TOBJ#";
push @EXPORT_OK, qw(@company_testobject_indicator @person_testobject_indicator $testobject_tag);

# Associated fields for organization numbers
our %orgnum_name = (
    acba_rathist => "orgnr",
    acba_ratindik => "orgnr",
    acba_rating => "orgnr",
    acba_scoring2 => "orgnr",
    acdt_dttph => "org_num",
    acdt_dttpv => "org_num",
    acib_acitaga => "aga_org_num",
    acib_acitarn => "arn_org_num",
    acib_acitbif => "bif_org_num",
    acib_acitbiv => "biv_org_num",
    acib_acitboa => "boa_org_num",
    acib_acitefi => "efi_org_num",
    acib_acitft2 => "ft2_org_num",
    acib_acitft3 => "ft3_org_num",
    acib_acitgaf => "gaf_org_num",
    acib_acitkcn => "kcn_dottr_num",
    acib_acitmin => "min_dottr_num",
    acib_acitnon => "non_org_num",
    acib_acitntf => "ntf_org_num",
    acib_acitoms => "oms_org_num",
    acib_acitver => "ver_org_num",
    acin_intr10 => "orgnr",
    acin_intr20 => "orgnr",
    acin_intr30 => "orgnr",
    acin_intr40 => "orgnr",
    acgd_empfun01 => "orgnr",
    acgd_organi01 => "orgnr",
    acra_klient => "orgnr",
    acra_rapp => "orgnr",
    acra_ratssa => "orgnr",
    acra_ratssah => "orgnr",
    acra_uphi => "orgnr",
    actx_ftax => "orgnr",
    #nsdb_sync => "ftg_org_num",
    nyckeltal => "org_num",
);

# Associated fields for person numbers
our %pnr_name = (
    acin_intr20 => "pnr",
    acin_intr40 => "pnr",
    acpr_prtprh => "pnr",
    actx_tax01 => "pnr",
    actx_tax02 => "pnr",
);
push @EXPORT_OK, qw(%orgnum_name %pnr_name);

# Internal relations
# These are also fetched based on the relation defined
# Should be a list of anonymous arrays with pairs of anonymous hashes indicating
# the 'table1,column1->table2,column2' relation
our @int_relations = (
    [ { acib_acitarn => "arn_arbnr_num" }, { acib_acitnoe => "noe_enhnr_num" } ],
    [ { acib_acitftg => "orgnr" }, { acin_intr20 => "pnr" } ],
    [ { acib_acitftg => "orgnr" }, { acin_intr40 => "pnr" } ],
    [ { acib_acitnon => "non_sni_kod" }, { acxx_bnycktal => "snikod" } ],
    [ { acpr_prtpr => "pnr12" }, { acpr_prtprh => "rel_pnr" } ],
);
push @EXPORT_OK, qw(@int_relations);

# Creates a list of the tables to export to mainframe
our $export_tables = sub {
    my %tables;
    $tables{$company_entry[0]} = 1; 
    $tables{$person_entry[0]} = 1;
    for my $key (keys %orgnum_name) {
        $tables{$key} = 1;
    }
    for my $key (keys %pnr_name) {
        $tables{$key} = 1;
    }
    for my $item (@int_relations) {
        #print @{[ keys ${$item}[1] ]}, "\n";
        map { $tables{$_} = 1 } keys %{${$item}[1]};
    }
    delete $tables{nyckeltal};
    return keys %tables;
};
push @EXPORT_OK, qw($export_tables);

our @test_persons = qw(
    1010101010
    1212121212
    9507262385
    5106144446
    6705053723
    6704033452
    8701018023
    5504162776
    3008239190
    6606077771
    5812092830
    4404044440
    7707077777
    6205143248
    4510101019
    6709272691
    7006121144
    0303035943
    6711222940
    6707182991
    4203249034
    1010109807
    7702129508
    1210101026
    3207319207
    8210125681
    8211111235
    7704179501
    6504042224
    6705203252
    4707139996
    6502013755
    5508112561
    4504069248
    7111309287
    5706262630
    3309183873
    2907304766
    4702163413
    5206142597
    4806212231
    3003064742
    5412192097
    2509099269
    3512159116
    5310101018
    1604189017
    8811119307
    8902029357
    5003072260
    4501128278
    3609116094
    3710219209
    5409272324
    5410062656
    5411222267
    5505077775
    2202022220
);


our @test_businesses = qw(
    5561234567
    1010101010
    5562000116
    5563035798
    5562187129
    5563698488
    5561111112
    5561010116
    5561020115
    5561030114
    5561060111
    5561070110
    5561080101
    5561070102
    5561090118
    9164499353
    9164500291
    8551001251
    8551013371
    7572021140
    7164116464
);

push @EXPORT_OK, qw(@test_persons @test_businesses);


our %tables_to_roll = ( actx_ftax =>  [ "ar_sek_tax_from", "tr_datum" ],
                    actx_tax01 => [ "inkar" ],
                    actx_tax02 => [ "inkar" ],
                    acib_acitboa => [ "boa_slut_per", "boa_trans_dat" ],
);
push @EXPORT_OK, qw(%tables_to_roll);

1;
